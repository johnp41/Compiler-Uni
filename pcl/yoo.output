Grammar

    0 $accept: expr $end

    1 expr: l_value
    2     | r_value

    3 l_value: l_value_simple
    4        | l_value '^'
    5        | r_value_simple '^'

    6 l_value_simple: id

    7 r_value: r_value_simple
    8        | expr '+' expr

    9 r_value_simple: integer_const
   10               | '@' l_value_simple


Terminals, with rules where they appear

$end (0) 0
'+' (43) 8
'@' (64) 10
'^' (94) 4 5
error (256)
id (258) 6
integer_const (259) 9


Nonterminals, with rules where they appear

$accept (8)
    on left: 0
expr (9)
    on left: 1 2, on right: 0 8
l_value (10)
    on left: 3 4 5, on right: 1 4
l_value_simple (11)
    on left: 6, on right: 3 10
r_value (12)
    on left: 7 8, on right: 2
r_value_simple (13)
    on left: 9 10, on right: 5 7


State 0

    0 $accept: . expr $end

    id             shift, and go to state 1
    integer_const  shift, and go to state 2
    '@'            shift, and go to state 3

    expr            go to state 4
    l_value         go to state 5
    l_value_simple  go to state 6
    r_value         go to state 7
    r_value_simple  go to state 8


State 1

    6 l_value_simple: id .

    $default  reduce using rule 6 (l_value_simple)


State 2

    9 r_value_simple: integer_const .

    $default  reduce using rule 9 (r_value_simple)


State 3

   10 r_value_simple: '@' . l_value_simple

    id  shift, and go to state 1

    l_value_simple  go to state 9


State 4

    0 $accept: expr . $end
    8 r_value: expr . '+' expr

    $end  shift, and go to state 10
    '+'   shift, and go to state 11


State 5

    1 expr: l_value .
    4 l_value: l_value . '^'

    '^'  shift, and go to state 12

    $default  reduce using rule 1 (expr)


State 6

    3 l_value: l_value_simple .

    $default  reduce using rule 3 (l_value)


State 7

    2 expr: r_value .

    $default  reduce using rule 2 (expr)


State 8

    5 l_value: r_value_simple . '^'
    7 r_value: r_value_simple .

    '^'  shift, and go to state 13

    $default  reduce using rule 7 (r_value)


State 9

   10 r_value_simple: '@' l_value_simple .

    $default  reduce using rule 10 (r_value_simple)


State 10

    0 $accept: expr $end .

    $default  accept


State 11

    8 r_value: expr '+' . expr

    id             shift, and go to state 1
    integer_const  shift, and go to state 2
    '@'            shift, and go to state 3

    expr            go to state 14
    l_value         go to state 5
    l_value_simple  go to state 6
    r_value         go to state 7
    r_value_simple  go to state 8


State 12

    4 l_value: l_value '^' .

    $default  reduce using rule 4 (l_value)


State 13

    5 l_value: r_value_simple '^' .

    $default  reduce using rule 5 (l_value)


State 14

    8 r_value: expr . '+' expr
    8        | expr '+' expr .

    $default  reduce using rule 8 (r_value)
